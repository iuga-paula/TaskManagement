@model Task_Management.Models.Task
<main id="main">
    <section id="services" class="services section-bg">

        @if (ViewBag.err != null)
        {
            <div class="alert alert-danger" role="alert">

                <p>@ViewBag.err</p>
            </div>
        }
        <div class="section-title">
            <h2>Edit Task "@Model.Title"</h2>
        </div>
        <hr />
        <br />
        <div class="row" style="margin: 20px;">
            @using (Html.BeginForm(actionName: "Edit", controllerName: "Tasks", routeValues: new { TaskId = Model.TaskId, ProjectId = Model.ProjectId }))
            {
                @Html.HttpMethodOverride(HttpVerbs.Put)
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                @Html.LabelFor(m => m.Title, "Task Title:")
                @Html.EditorFor(m => m.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Title, null, new { @class = "text-danger " })
                <br />
                @Html.LabelFor(m => m.Description, "Description:")
                <br />
                @Html.TextAreaFor(m => m.Description, 5, 50, new { htmlAttributes = new { @class = "text-box multi-line" } })
                <br />
                @Html.ValidationMessageFor(m => m.Description, null, new { @class = "text-danger " })
                <br /><br />
                @Html.LabelFor(m => m.UserId, "Assigned to:")
                @Html.DropDownListFor(m => m.UserId, new SelectList(Model.Members, "Value", "Text"), "Choose a team member for this task", new { @class = "form-control" }) <!--un singur user e asignat unui task-->
                <br />
                @Html.LabelFor(m => m.StartDate, "Start Date:")
                <br />
                @Html.EditorFor(m => m.StartDate, new { htmlAttributes = new { @type = "date", @class = "form-control", @Value = Model.StartDate.ToString("yyyy-MM-dd"), @Max = Model.Project.FinDate.ToString("yyyy-MM-dd"), @Min = Model.Project.StartDate.ToString("yyyy-MM-dd") } })
                @Html.ValidationMessageFor(m => m.StartDate, null, new { @class = "text-danger " })
                if (ViewBag.StartDate != null)
                {
                    <p class="text-danger"> @ViewBag.StartDate</p>

                }
                <br />
                @Html.LabelFor(m => m.FinDate, "Deadline:")
                <br />
                @Html.EditorFor(m => m.FinDate, new { htmlAttributes = new { @type = "date", @class = "form-control", @Value = Model.FinDate.ToString("yyyy-MM-dd"), @Max = Model.Project.FinDate.ToString("yyyy-MM-dd"), @Min = Model.Project.StartDate.ToString("yyyy-MM-dd") } })
                @Html.ValidationMessageFor(m => m.FinDate, null, new { @class = "text-danger " })
                if (ViewBag.FinDate != null)
                {
                    <p class="text-danger"> @ViewBag.FinDate</p>

                }
                <br />
                @Html.LabelFor(m => m.Status, "Status: ")
                @Html.DropDownListFor(m => m.Status, new SelectList(Model.Stat, "Value", "Text"), null, new { @class = "form-control" })
                <i class="icofont-info-circle"></i><i style="font-size:small">The first and the last days of the project are reserved for  meetings</i>
                <br />
                <button type="submit" class="btn btn-success">Edit Task</button>
            }
            <div class="col-6">
                <img src="~/Content/transparent-hero-im.png" class="img-fluid animated" alt="">
            </div>
        </div>
        <br />
        <div class="text-center">
        <a href="/Tasks/Show/@Model.TaskId"><button class="m-3 btn btn-info">Back To Task</button></a>
            </div>

</main>
